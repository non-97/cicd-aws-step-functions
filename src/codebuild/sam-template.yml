AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sfn-sam

  Sample SAM Template for sfn-sam

Parameters:
  StateMachineName:
    Description: Please type the Step Functions State Machine Name.
    Type: String
    Default: sfn-sam-state-machine
  StackUniqueId:
    Description: Please type the Stack unique ID.
    Type: String
    Default: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
  Cron1:
    Description: Please type the Cron.
    Type: String
    Default: cron(0 15 * * ? *)
  Cron2:
    Description: Please type the Cron.
    Type: String
    Default: cron(0 15 * * ? *)
  Cron3:
    Description: Please type the Cron.
    Type: String
    Default: cron(0 15 * * ? *)
  Cron4:
    Description: Please type the Cron.
    Type: String
    Default: cron(0 15 * * ? *)
  Cron5:
    Description: Please type the Cron.
    Type: String
    Default: cron(0 15 * * ? *)
  EventPattern1:
    Description: Please type the EventPattern.
    Type: String
    Default: '{
      "source": ["aws.states"],
      "detail-type": ["Step Functions Execution Status Change"],
      "detail": {
        "status": ["SUCCEEDED"],
        "stateMachineArn": ["arn:aws:states:us-east-1:<AWS Account ID>:stateMachine:<StateMachine Name>"]
      }
    }'
  EventPattern2:
    Description: Please type the EventPattern.
    Type: String
    Default: '{
      "source": ["aws.states"],
      "detail-type": ["Step Functions Execution Status Change"],
      "detail": {
        "status": ["SUCCEEDED"],
        "stateMachineArn": ["arn:aws:states:us-east-1:<AWS Account ID>:stateMachine:<StateMachine Name>"]
      }
    }'
  EventPattern3:
    Description: Please type the EventPattern.
    Type: String
    Default: '{
      "source": ["aws.states"],
      "detail-type": ["Step Functions Execution Status Change"],
      "detail": {
        "status": ["SUCCEEDED"],
        "stateMachineArn": ["arn:aws:states:us-east-1:<AWS Account ID>:stateMachine:<StateMachine Name>"]
      }
    }'
  EventPattern4:
    Description: Please type the EventPattern.
    Type: String
    Default: '{
      "source": ["aws.states"],
      "detail-type": ["Step Functions Execution Status Change"],
      "detail": {
        "status": ["SUCCEEDED"],
        "stateMachineArn": ["arn:aws:states:us-east-1:<AWS Account ID>:stateMachine:<StateMachine Name>"]
      }
    }'
  EventPattern5:
    Description: Please type the EventPattern.
    Type: String
    Default: '{
      "source": ["aws.states"],
      "detail-type": ["Step Functions Execution Status Change"],
      "detail": {
        "status": ["SUCCEEDED"],
        "stateMachineArn": ["arn:aws:states:us-east-1:<AWS Account ID>:stateMachine:<StateMachine Name>"]
      }
    }'
  EventBusArn1:
    Description: Please type the Event Bus ARN.
    Type: String
    Default: arn:aws:events:us-east-1:<AWS Account ID>:event-bus/default
  EventBusArn2:
    Description: Please type the Event Bus ARN.
    Type: String
    Default: arn:aws:events:us-east-1:<AWS Account ID>:event-bus/default
  EventBusArn3:
    Description: Please type the Event Bus ARN.
    Type: String
    Default: arn:aws:events:us-east-1:<AWS Account ID>:event-bus/default
  EventBusArn4:
    Description: Please type the Event Bus ARN.
    Type: String
    Default: arn:aws:events:us-east-1:<AWS Account ID>:event-bus/default
  EventBusArn5:
    Description: Please type the Event Bus ARN.
    Type: String
    Default: arn:aws:events:us-east-1:<AWS Account ID>:event-bus/default
  TargetEventBusArn1:
    Description: Please type the target event bus arn after execution.
    Type: String
    Default: arn:aws:events:ap-northeast-1:<AWS Account ID>:event-bus/default
  TargetEventBusArn2:
    Description: Please type the target event bus arn after execution.
    Type: String
    Default: arn:aws:events:ap-northeast-1:<AWS Account ID>:event-bus/default
  TargetEventBusArn3:
    Description: Please type the target event bus arn after execution.
    Type: String
    Default: arn:aws:events:ap-northeast-1:<AWS Account ID>:event-bus/default
  TargetEventBusArn4:
    Description: Please type the target event bus arn after execution.
    Type: String
    Default: arn:aws:events:ap-northeast-1:<AWS Account ID>:event-bus/default
  TargetEventBusArn5:
    Description: Please type the target event bus arn after execution.
    Type: String
    Default: arn:aws:events:ap-northeast-1:<AWS Account ID>:event-bus/default
  XRayTracing:
    Description: Please type the AWS X-Ray trace to enable or not.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  IamPolicyDocument:
    Description: Please type the IAM Policy Document.
    Type: String
    Default: '{
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Action": [
                    "states:DescribeStateMachine",
                    "states:DescribeExecution",
                    "states:ListExecutions"
                ],
                "Resource": [
                    "arn:aws:states:us-east-1:<AWS Account ID>:execution:*:*",
                    "arn:aws:states:us-east-1:<AWS Account ID>:stateMachine:*"
                ]
            }
        ]
    }'

Conditions:
  ExistsCron1: !Not 
    - !Equals
      - !Sub ${Cron1}
      - ""
  ExistsCron2: !Not 
    - !Equals
      - !Sub ${Cron2}
      - ""
  ExistsCron3: !Not 
    - !Equals
      - !Sub ${Cron3}
      - ""
  ExistsCron4: !Not 
    - !Equals
      - !Sub ${Cron4}
      - ""
  ExistsCron5: !Not 
    - !Equals
      - !Sub ${Cron5}
      - ""
  ExistsEventPattern1: !Not 
    - !Equals
      - !Sub ${EventPattern1}
      - ""
  ExistsEventPattern2: !Not 
    - !Equals
      - !Sub ${EventPattern2}
      - ""
  ExistsEventPattern3: !Not 
    - !Equals
      - !Sub ${EventPattern3}
      - ""
  ExistsEventPattern4: !Not 
    - !Equals
      - !Sub ${EventPattern4}
      - ""
  ExistsEventPattern5: !Not 
    - !Equals
      - !Sub ${EventPattern5}
      - ""
  ExistsEventBusArn1: !Not 
    - !Equals
      - !Sub ${EventBusArn1}
      - ""
  ExistsEventBusArn2: !Not 
    - !Equals
      - !Sub ${EventBusArn2}
      - ""
  ExistsEventBusArn3: !Not 
    - !Equals
      - !Sub ${EventBusArn3}
      - ""
  ExistsEventBusArn4: !Not 
    - !Equals
      - !Sub ${EventBusArn4}
      - ""
  ExistsEventBusArn5: !Not 
    - !Equals
      - !Sub ${EventBusArn5}
      - ""
  ExistsTargetEventBusArn1: !Not 
    - !Equals
      - !Sub ${TargetEventBusArn1}
      - ""
  ExistsTargetEventBusArn2: !Not 
    - !Equals
      - !Sub ${TargetEventBusArn2}
      - ""
  ExistsTargetEventBusArn3: !Not 
    - !Equals
      - !Sub ${TargetEventBusArn3}
      - ""
  ExistsTargetEventBusArn4: !Not 
    - !Equals
      - !Sub ${TargetEventBusArn4}
      - ""
  ExistsTargetEventBusArn5: !Not 
    - !Equals
      - !Sub ${TargetEventBusArn5}
      - ""
  IsEnabledXRayTracing: !Equals
      - !Sub ${XRayTracing}
      - true
  ExistsIamPolicyDocument: !Not 
    - !Equals
      - !Sub ${IamPolicyDocument}
      - "null"

Resources:
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${StateMachineName}
      DefinitionUri: state_machine/StateMachineWorkFlow.asl.json
      Role: !GetAtt StateMachineRole.Arn
      Logging:
        Level: ALL
        IncludeExecutionData: True
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn
      Tracing: 
        Enabled: !Sub ${XRayTracing}

  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName : !Sub '/aws/vendedlogs/states/${StateMachineName}-${StackUniqueId}-Logs'
      RetentionInDays: 731

  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyDocument: {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "logs:CreateLogDelivery",
                          "logs:GetLogDelivery",
                          "logs:UpdateLogDelivery",
                          "logs:DeleteLogDelivery",
                          "logs:ListLogDeliveries",
                          "logs:PutResourcePolicy",
                          "logs:DescribeResourcePolicies",
                          "logs:DescribeLogGroups"
                      ],
                      "Resource": "*"
                  }
              ]
          }
          PolicyName: CloudWatchLogsDeliveryFullAccessPolicy
        - !If
          - IsEnabledXRayTracing
          - PolicyDocument: {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets"
                        ],
                        "Resource": [
                            "*"
                        ]
                    }
                ]
            }
            PolicyName: XRayAccessPolicy
          - !Ref AWS::NoValue
        - !If
          - ExistsIamPolicyDocument
          - PolicyDocument: !Sub ${IamPolicyDocument}
            PolicyName: IamPolicyForExecuteStateMachine
          - !Ref AWS::NoValue

  ScheduledRule1: 
    Condition: ExistsCron1
    Type: AWS::Events::Rule
    Properties: 
      Description: ScheduledRule
      ScheduleExpression: !Sub ${Cron1}
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn
  ScheduledRule2: 
    Condition: ExistsCron2
    Type: AWS::Events::Rule
    Properties: 
      Description: ScheduledRule
      ScheduleExpression: !Sub ${Cron2}
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn
  ScheduledRule3: 
    Condition: ExistsCron3
    Type: AWS::Events::Rule
    Properties: 
      Description: ScheduledRule
      ScheduleExpression: !Sub ${Cron3}
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn
  ScheduledRule4: 
    Condition: ExistsCron4
    Type: AWS::Events::Rule
    Properties: 
      Description: ScheduledRule
      ScheduleExpression: !Sub ${Cron4}
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn
  ScheduledRule5: 
    Condition: ExistsCron5
    Type: AWS::Events::Rule
    Properties: 
      Description: ScheduledRule
      ScheduleExpression: !Sub ${Cron5}
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn

  EventPatternRule1: 
    Condition: ExistsEventPattern1
    Type: AWS::Events::Rule
    Properties: 
      Description: EventPatternRule
      EventPattern: !Sub ${EventPattern1}
      EventBusName: !If
        - ExistsEventBusArn1
        - !Sub ${EventBusArn1}
        - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn
  EventPatternRule2: 
    Condition: ExistsEventPattern2
    Type: AWS::Events::Rule
    Properties: 
      Description: EventPatternRule
      EventPattern: !Sub ${EventPattern2}
      EventBusName: !If
        - ExistsEventBusArn2
        - !Sub ${EventBusArn2}
        - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn
  EventPatternRule3: 
    Condition: ExistsEventPattern3
    Type: AWS::Events::Rule
    Properties: 
      Description: EventPatternRule
      EventPattern: !Sub ${EventPattern3}
      EventBusName: !If
        - ExistsEventBusArn3
        - !Sub ${EventBusArn3}
        - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn
  EventPatternRule4: 
    Condition: ExistsEventPattern4
    Type: AWS::Events::Rule
    Properties: 
      Description: EventPatternRule
      EventPattern: !Sub ${EventPattern4}
      EventBusName: !If
        - ExistsEventBusArn4
        - !Sub ${EventBusArn4}
        - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn
  EventPatternRule5: 
    Condition: ExistsEventPattern5
    Type: AWS::Events::Rule
    Properties: 
      Description: EventPatternRule
      EventPattern: !Sub ${EventPattern5}
      EventBusName: !If
        - ExistsEventBusArn5
        - !Sub ${EventBusArn5}
        - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn

  ExecuteStateMachineRole: 
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: states_StartExecution
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - states:StartExecution
                  Resource: 
                    - !Ref StateMachine

  TargetEventBusArnRule1: 
    Condition: ExistsTargetEventBusArn1
    Type: AWS::Events::Rule
    Properties: 
      Description: TargetEventBusArnRule
      EventPattern: {
        "source": ["aws.states"],
        "detail-type": ["Step Functions Execution Status Change"],
        "detail": {
          "status": ["SUCCEEDED"],
          "stateMachineArn": [!Ref StateMachine]
        }
      }
      State: ENABLED
      Targets: 
        - Arn: !Ref TargetEventBusArn1
          Id: TargetEventBusArn1
          RoleArn: !GetAtt InvokeEventBusRole1.Arn
        - !If
          - ExistsTargetEventBusArn2
          - Arn: !Ref TargetEventBusArn2
            Id: TargetEventBusArn2
            RoleArn: !GetAtt InvokeEventBusRole2.Arn
          - !Ref AWS::NoValue
        - !If
          - ExistsTargetEventBusArn3
          - Arn: !Ref TargetEventBusArn3
            Id: TargetEventBusArn3
            RoleArn: !GetAtt InvokeEventBusRole3.Arn
          - !Ref AWS::NoValue
        - !If
          - ExistsTargetEventBusArn4
          - Arn: !Ref TargetEventBusArn4
            Id: TargetEventBusArn4
            RoleArn: !GetAtt InvokeEventBusRole4.Arn
          - !Ref AWS::NoValue
        - !If
          - ExistsTargetEventBusArn5
          - Arn: !Ref TargetEventBusArn5
            Id: TargetEventBusArn5
            RoleArn: !GetAtt InvokeEventBusRole5.Arn
          - !Ref AWS::NoValue
          
  InvokeEventBusRole1: 
      Type: AWS::IAM::Role
      Condition: ExistsTargetEventBusArn1
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: InvokeEventBus
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - events:PutEvents
                  Resource: 
                    - !Ref TargetEventBusArn1
  InvokeEventBusRole2: 
      Type: AWS::IAM::Role
      Condition: ExistsTargetEventBusArn2
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: InvokeEventBus
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - events:PutEvents
                  Resource: 
                    - !Ref TargetEventBusArn2
  InvokeEventBusRole3: 
      Type: AWS::IAM::Role
      Condition: ExistsTargetEventBusArn3
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: InvokeEventBus
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - events:PutEvents
                  Resource: 
                    - !Ref TargetEventBusArn3
  InvokeEventBusRole4: 
      Type: AWS::IAM::Role
      Condition: ExistsTargetEventBusArn4
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: InvokeEventBus
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - events:PutEvents
                  Resource: 
                    - !Ref TargetEventBusArn4
  InvokeEventBusRole5: 
      Type: AWS::IAM::Role
      Condition: ExistsTargetEventBusArn5
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: InvokeEventBus
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - events:PutEvents
                  Resource: 
                    - !Ref TargetEventBusArn5