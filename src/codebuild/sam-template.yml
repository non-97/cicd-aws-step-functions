AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sfn-sam

  Sample SAM Template for sfn-sam

Parameters:
  StateMachineName:
    Description: Please type the Step Functions State Machine Name.
    Type: String
    Default: sfn-sam-state-machine
  StackUniqueId:
    Description: Please type the Stack unique ID.
    Type: String
    Default: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
  CronIndexCron:
    Description: Please type the Cron.
    Type: String
    Default: "null"
  EventPatternIndexEventPattern:
    Description: Please type the EventPattern.
    Type: String
    Default: "null"
  EventBusArnIndexEventBusArn:
    Description: Please type the Event Bus ARN.
    Type: String
    Default: "null"
  TargetEventBusArnIndexTargetEventBusArn:
    Description: Please type the target event bus arn after execution.
    Type: String
    Default: "null"
  XRayTracing:
    Description: Please type the AWS X-Ray trace to enable or not.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  IamPolicyDocument:
    Description: Please type the IAM Policy Document.
    Type: String

Conditions:
  IsEnabledXRayTracing: !Equals
      - !Sub ${XRayTracing}
      - true
  ExistsIamPolicyDocument: !Not 
    - !Equals
      - !Sub ${IamPolicyDocument}
      - "null"

Resources:
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${StateMachineName}
      DefinitionUri: state_machine/StateMachineWorkFlow.asl.json
      Role: !GetAtt StateMachineRole.Arn
      Logging:
        Level: ALL
        IncludeExecutionData: True
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn
      Tracing: 
        Enabled: !Sub ${XRayTracing}

  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName : !Sub '/aws/vendedlogs/states/${StateMachineName}-${StackUniqueId}-Logs'
      RetentionInDays: 731

  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyDocument: {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "logs:CreateLogDelivery",
                          "logs:GetLogDelivery",
                          "logs:UpdateLogDelivery",
                          "logs:DeleteLogDelivery",
                          "logs:ListLogDeliveries",
                          "logs:PutResourcePolicy",
                          "logs:DescribeResourcePolicies",
                          "logs:DescribeLogGroups"
                      ],
                      "Resource": "*"
                  }
              ]
          }
          PolicyName: CloudWatchLogsDeliveryFullAccessPolicy
        - !If
          - IsEnabledXRayTracing
          - PolicyDocument: {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets"
                        ],
                        "Resource": [
                            "*"
                        ]
                    }
                ]
            }
            PolicyName: XRayAccessPolicy
          - !Ref AWS::NoValue
        - !If
          - ExistsIamPolicyDocument
          - PolicyDocument: !Sub ${IamPolicyDocument}
            PolicyName: IamPolicyForExecuteStateMachine
          - !Ref AWS::NoValue

  ScheduledRuleIndexCron: 
    Type: AWS::Events::Rule
    Properties: 
      Description: ScheduledRule
      ScheduleExpression: 
        Fn::Sub: ${CronIndexCron}
      State: ENABLED
      Targets: 
        - Arn: 
            Ref: StateMachine
          Id: 
            Fn::GetAtt: StateMachine.Name
          RoleArn: 
            Fn::GetAtt: ExecuteStateMachineRole.Arn

  EventPatternRuleIndexEventPattern: 
    Type: AWS::Events::Rule
    Properties: 
      Description: EventPatternRule
      EventPattern: 
        Fn::Sub: ${EventPatternIndexEventPattern}
      EventBusName: 
        Fn::Sub: ${EventBusArnIndexEventBusArn}
      State: ENABLED
      Targets: 
        - Arn: 
            Ref: StateMachine
          Id: 
            Fn::GetAtt: StateMachine.Name
          RoleArn: 
            Fn::GetAtt: ExecuteStateMachineRole.Arn

  ExecuteStateMachineRole: 
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: states_StartExecution
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - states:StartExecution
                  Resource: 
                    - !Ref StateMachine

  TargetEventBusArnRuleIndexTargetEventBusArn: 
    Type: AWS::Events::Rule
    Properties: 
      Description: TargetEventBusArnRule
      EventPattern: {
        "source": ["aws.states"],
        "detail-type": ["Step Functions Execution Status Change"],
        "detail": {
          "status": ["SUCCEEDED"],
          "stateMachineArn": [Ref: StateMachine]
        }
      }
      State: ENABLED
      Targets: 
        - Arn: 
            Ref: TargetEventBusArnIndexTargetEventBusArn
          Id: TargetEventBusArnIndexTargetEventBusArn
          RoleArn: 
            Fn::GetAtt: InvokeEventBusRoleIndexTargetEventBusArn.Arn

  InvokeEventBusRoleIndexTargetEventBusArn: 
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: InvokeEventBus
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - events:PutEvents
                  Resource: 
                    - Ref: TargetEventBusArnIndexTargetEventBusArn
