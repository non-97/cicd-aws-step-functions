AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sfn-sam

  Sample SAM Template for sfn-sam

Parameters:
  StateMachineName:
    Description: Please type the Step Functions State Machine Name.
    Type: String
    Default: 'sfn-sam-state-machine'
  StackIdAfterStackName:
    Description: Please type the Stack ID after Stack Name.
    Type: String
    Default: 'xxxxxxx'
  Cron:
    Description: Please type the Cron.
    Type: String
    Default: 'cron(0 15 * * ? *)'
  EventPattern:
    Description: Please type the EventPattern.
    Type: String
    Default: '{
      "source": ["aws.states"],
      "detail-type": ["Step Functions Execution Status Change"],
      "detail": {
        "status": ["SUCCEEDED"],
        "stateMachineArn": ["arn:aws:states:us-east-1:<AWS Account ID>:stateMachine:<StateMachine Name>"]
      }
    }'
  EventBusArn:
    Description: Please type the Event Bus ARN.
    Type: String
    Default: 'arn:aws:events:us-east-1:<AWS Account ID>:event-bus/default'
  TargetEventBusArnAfterExecution:
    Description: Please type the target event bus arn after execution.
    Type: String
    Default: 'arn:aws:events:ap-northeast-1:<AWS Account ID>:event-bus/default'
  XRayTracing:
    Description: Please type the AWS X-Ray trace to enable or not.
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  IamPolicyDocument:
    Description: Please type the IAM Policy Document.
    Type: String
    Default: '{
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Action": [
                    "states:DescribeStateMachine",
                    "states:DescribeExecution",
                    "states:ListExecutions"
                ],
                "Resource": [
                    "arn:aws:states:us-east-1:<AWS Account ID>:execution:*:*",
                    "arn:aws:states:us-east-1:<AWS Account ID>:stateMachine:*"
                ]
            }
        ]
    }'

Conditions:
  ExistsCron: !Not 
    - !Equals
      - !Sub ${Cron}
      - "null"
  ExistsEventPattern: !Not 
    - !Equals
      - !Sub ${EventPattern}
      - "null"
  ExistsEventBusArn: !Not 
    - !Equals
      - !Sub ${EventBusArn}
      - "null"
  ExistsTargetEventBusArnAfterExecution: !Not 
    - !Equals
      - !Sub ${TargetEventBusArnAfterExecution}
      - "null"
  IsEnabledXRayTracing: !Equals
      - !Sub ${XRayTracing}
      - true
  ExistsIamPolicyDocument: !Not 
    - !Equals
      - !Sub ${IamPolicyDocument}
      - "null"

Resources:
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${StateMachineName}
      DefinitionUri: statemachine/StateMachineWorkFlow.asl.json
      Role: !GetAtt StateMachineRole.Arn
      Logging:
        Level: ALL
        IncludeExecutionData: True
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn
      Tracing: 
        Enabled: !Sub ${XRayTracing}

  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName : !Sub '/aws/vendedlogs/states/${StateMachineName}-${StackIdAfterStackName}-Logs'
      RetentionInDays: 731

  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyDocument: {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "logs:CreateLogDelivery",
                          "logs:GetLogDelivery",
                          "logs:UpdateLogDelivery",
                          "logs:DeleteLogDelivery",
                          "logs:ListLogDeliveries",
                          "logs:PutResourcePolicy",
                          "logs:DescribeResourcePolicies",
                          "logs:DescribeLogGroups"
                      ],
                      "Resource": "*"
                  }
              ]
          }
          PolicyName: CloudWatchLogsDeliveryFullAccessPolicy
        - !If
          - IsEnabledXRayTracing
          - PolicyDocument: {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets"
                        ],
                        "Resource": [
                            "*"
                        ]
                    }
                ]
            }
            PolicyName: XRayAccessPolicy
          - !Ref AWS::NoValue
        - !If
          - ExistsIamPolicyDocument
          - PolicyDocument: !Sub ${IamPolicyDocument}
            PolicyName: IamPolicyForExecuteStateMachine
          - !Ref AWS::NoValue

  ScheduledRule: 
    Condition: ExistsCron
    Type: AWS::Events::Rule
    Properties: 
      Description: ScheduledRule
      ScheduleExpression: !Sub ${Cron}
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn

  EventPatternRule: 
    Condition: ExistsEventPattern
    Type: AWS::Events::Rule
    Properties: 
      Description: EventPatternRule
      EventPattern: !Sub ${EventPattern}
      EventBusName: !If
        - ExistsEventBusArn
        - !Sub ${EventBusArn}
        - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      State: ENABLED
      Targets: 
        - Arn: !Ref StateMachine
          Id: !GetAtt StateMachine.Name
          RoleArn: !GetAtt ExecuteStateMachineRole.Arn

  ExecuteStateMachineRole: 
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: states_StartExecution
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - states:StartExecution
                  Resource: 
                    - !Ref StateMachine

  TargetEventBusArnAfterExecutionRule: 
    Condition: ExistsTargetEventBusArnAfterExecution
    Type: AWS::Events::Rule
    Properties: 
      Description: TargetEventBusArnAfterExecutionRule
      EventPattern: {
        "source": ["aws.states"],
        "detail-type": ["Step Functions Execution Status Change"],
        "detail": {
          "status": ["SUCCEEDED"],
          "stateMachineArn": [!Ref StateMachine]
        }
      }
      State: ENABLED
      Targets: 
        - Arn: !Ref TargetEventBusArnAfterExecution
          Id: TargetEventBusArnAfterExecution
          RoleArn: !GetAtt InvokeEventBusRole.Arn

  InvokeEventBusRole: 
      Type: AWS::IAM::Role
      Condition: ExistsTargetEventBusArnAfterExecution
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: InvokeEventBus
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: 
                    - events:PutEvents
                  Resource: 
                    - !Ref TargetEventBusArnAfterExecution